bnmysql -u root -p

# Task-1

create table customer(
 customer_id varchar(10) not null,
 customer_name varchar(20) not null,
 customer_street varchar(30), 
 customer_city varchar(30),
 primary key (customer_id)
 );

create table branch (
 branch_name varchar(15),
 branch_city varchar(30), 
 assets int,
 primary key (branch_name),
 check (assets >= 0)
 );


create table account(
 branch_name varchar(15),
 account_number varchar(10) not null,
 balance int,
 primary key (account_number),
 check (balance >= 0)           # checks if all entries of balance are greater than or equal to 0. r naile entry nibe na.
 );

create table loan(
 loan_number varchar(10) not null, # it wont allow null entry.
 branch_name varchar(15),
 amount int,
 primary key (loan_number)
 );

create table depositor(
 customer_id varchar(10) not null,
 account_number varchar(10) not null,
 primary key (customer_id,account_number),
 foreign key (customer_id) references customer(customer_id),
 foreign key (account_number) references account(account_number)
 );

create table borrower(
 customer_id varchar(10) not null,
 loan_number varchar(10) not null,
 primary key (customer_id, loan_number),
 foreign key (customer_id) references customer(customer_id),
 foreign key (loan_number) references loan(loan_number)
 );


# Task-2

insert into customer values
('C-101','Jones', 'Main', 'Harrison'),
('C-201','Smith', 'North', 'Rye'),
('C-211','Hayes', 'Main','Harrison'),
('C-212','Curry', 'North', 'Rye'),
('C-215','Lindsay', 'Park', 'Pittsfield'),
('C-220','Turner','Putnam', 'Stamford'),
('C-222','Williams', 'Nassau', 'Princeton'),
('C-225','Adams', 'Spring','Pittsfield'),
('C-226','Johnson', 'Alma', 'Palo Alto'),
('C-233','Glenn', 'Sand Hill', 'Woodside'),
('C-234','Brooks', 'Senator', 'Brooklyn'),
('C-255','Green', 'Walnut', 'Stamford');



insert into branch values
('Downtown','Brooklyn',9000000),
('Redwood','Palo Alto',2100000), 
('Perryridge','Horseneck',1700000),
('Mianus','Horseneck',400000),
('Round Hill','Horseneck',8000000),
('Pownal', 'Bennington',300000), 
('North Town','Rye',3700000), 
('Brighton','Brooklyn',7100000);


insert into account values
('Downtown','A-101',500),
('Mianus','A-215',700) ,
('Perryridge','A-102',400), 
('Round Hill','A-305',350), 
('Brighton','A-201',900), 
('Redwood','A-222',700),
('Brighton','A-217',750);


insert into loan values
('L-17', 'Downtown', 1000),
('L-23', 'Redwood', 2000),
('L-15', 'Perryridge', 1500), 
('L-14','Downtown', 1500),
('L-93', 'Mianus', 500),
('L-11', 'Round Hill', 900), 
('L-16', 'Perryridge',1300);


insert into depositor values
('C-226', 'A-101'), 
('C-201', 'A-215'),
('C-211', 'A-102'),
('C-220', 'A-305'), 
('C-226', 'A-201'),
('C-101', 'A-217'),
('C-215', 'A-222');



insert into borrower values
('C-101', 'L-17'),
('C-201', 'L-23'),
('C-211', 'L-15'),
('C-226', 'L-14'), 
('C-212', 'L-93'), 
('C-201', 'L-11'), 
('C-222', 'L-17'),
('C-225', 'L-16');

                                                                                                      table-1    table-2
# select student.id, student.name, dept, grade.ccode, grade.grade from (student innner join grades on student.id=grades.sid);


# JOINING TABLES;

# select student.id, student.name, dept, grade.ccode, grade.grade from (student innner join grades on student.id=grades.sid) 
 innner join courses on courses.ccode=grades.ccode;



# Task-3

Select customer.customer_id ,customer.customer_name,customer.customer_city, depositor.account_number from customer inner join depositor on 
customer.customer_id=depositor.customer_id;

Select customer.customer_id ,customer.customer_name,customer.customer_city, depositor.account_number from customer right join depositor on 
customer.customer_id=depositor.customer_id;

Select customer.customer_id ,customer.customer_name,customer.customer_city, depositor.account_number from customer left join depositor on 
customer.customer_id=depositor.customer_id;


# Task-4

Select customer.customer_id ,customer.customer_name,customer.customer_city, depositor.account_number, account.balance, account.branch_name
from (customer inner join depositor on customer.customer_id=depositor.customer_id) 
inner join account on account.account_number=depositor.account_number;


# Task-5

select customer.customer_id ,customer.customer_name,customer.customer_city, depositor.account_number, account.balance, account.branch_name  
from customer,depositor, account
where customer.customer_id=depositor.customer_id and account.account_number=depositor.account_number;


# Task-6

# 1

select customer.customer_name,customer.customer_city
from customer,loan,borrower
where customer.customer_id=borrower.customer_id and loan.loan_number=borrower.loan_number and loan.branch_name='Perryridge';

# 5

select B1.branch_name from branch B1 where B1.assets > all (select B2.assets from Branch B2 where B2.branch_city='Horseneck');






select B1.customer_name as customer1, B2.customer_name as customer2, B2.customer_city as city from 
(customer as B1 inner join customer as B2 on B1.customer_name!=B2.customer_name and B1.customer_city=B2.customer_city);


